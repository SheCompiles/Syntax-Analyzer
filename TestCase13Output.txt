
int [Shift][Reduce 13]
id [Shift]
( [Shift]
int [Shift][Reduce 13]
id [Shift][Reduce 12][Reduce 20]
) [Reduce 22][Shift]
{ [Shift][Reduce 11]
 
if [Reduce 51][Shift]
( [Shift]
id [Shift]
> [Reduce 85][Reduce 62][Shift]
intconstant [Shift][Reduce 94][Reduce 61][Reduce 73]
) [Shift]
return [Shift]
id [Shift]
* [Reduce 85][Reduce 62][Shift]
id [Shift]
( [Shift]
id [Shift]
- [Reduce 85][Reduce 62][Shift]
intconstant [Shift][Reduce 94][Reduce 61][Reduce 66]
) [Reduce 83][Reduce 92][Shift][Reduce 89][Reduce 63][Reduce 67]
; [Reduce 40][Shift][Reduce 57][Reduce 47]
 
else [Shift]
return [Shift]
intconstant [Shift][Reduce 94][Reduce 61]
; [Reduce 40][Shift][Reduce 57][Reduce 47][Reduce 53][Reduce 43][Reduce 50]
 
} [Shift][Reduce 59][Reduce 18][Reduce 6][Reduce 3]
 
void [Shift]
id [Shift]
( [Shift]
) [Reduce 23][Shift]
{ [Shift][Reduce 11]
 
int [Shift][Reduce 13]
id [Shift][Reduce 12]
; [Shift][Reduce 9][Reduce 10]
 
int [Shift][Reduce 13]
id [Shift][Reduce 12]
; [Shift][Reduce 9][Reduce 10]
 
println [Reduce 51][Shift]
( [Shift]
stringconstant [Shift][Reduce 96][Reduce 61]
, [Reduce 83][Shift]
id [Shift]
( [Shift]
intconstant [Shift][Reduce 94][Reduce 61]
) [Reduce 83][Reduce 92][Shift][Reduce 89][Reduce 63]
, [Reduce 84][Shift]
stringconstant [Shift][Reduce 96][Reduce 61]
) [Reduce 84][Shift]
; [Shift][Reduce 58][Reduce 48][Reduce 50]
 
id [Shift]
= [Reduce 85][Shift]
intconstant [Shift][Reduce 94][Reduce 61][Reduce 60]
; [Reduce 40][Shift][Reduce 42][Reduce 50]
id [Shift]
= [Reduce 85][Shift]
intconstant [Shift][Reduce 94][Reduce 61][Reduce 60]
; [Reduce 40][Shift][Reduce 42][Reduce 50]
 
for [Shift]
( [Shift]
; [Reduce 41][Shift]
id [Shift]
<= [Reduce 85][Reduce 62][Shift]
intconstant [Shift][Reduce 94][Reduce 61][Reduce 72]
; [Shift]
) [Reduce 41][Shift]
{ [Shift][Reduce 11]
id [Shift][Reduce 17]
= 
[Reject]
